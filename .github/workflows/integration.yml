#
# Copyright 2025 jacquarde
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#


name: Integration


on:
    workflow_dispatch:
    push:
        branches: [ main, develop ]


jobs:

    setup:
        runs-on: self-hosted
        outputs:
            properties: ${{steps.properties.outputs.properties}}
        steps:
        -   name: Fetch source
            run:  gh repo clone ${{github.repository}} . -- --branch ${{github.ref_name}} --depth 1
            env:
                GH_TOKEN: ${{github.token}}
        -   name: Create wrapper
            run:  gradle wrapper
        -   name: Extract properties
            id:   properties
            run:  |
                  echo "properties=$(./gradlew propertiesJson -q)" >> $env:GITHUB_OUTPUT
                  Write-Output "::notice::$env:GITHUB_OUTPUT"

    build:
        runs-on: self-hosted
        needs:   setup
        env:
            properties: ${{fromJSON(needs.setup.outputs.properties)}}
        steps:
        -   name: Create wrapper
            run:  gradle wrapper
        -   name: Build with Gradle wrapper
            run:  ./gradlew build
        -   name: Upload artifact
            uses: actions/upload-artifact@v4
            with:
                name: ${{env.properties.name}}-${{env.properties.version}}
                path: ./build/libs

    releaseDraft:
        name:    Release draft
        needs:   build
        runs-on: self-hosted
        permissions:
            contents: write
        env:
            properties: ${{fromJSON(needs.setup.outputs.properties)}}
        steps:
        -   name: Fetch source
            run:  gh repo clone ${{github.repository}} . -- --branch ${{github.ref_name}} --depth 1
            env:
                GH_TOKEN: ${{github.token}}
        -   name: Create release draft
            env:
                GITHUB_TOKEN: ${{github.token}}
            run:  |
                  gh release create "v${{env.properties.version}}" --draft --title "v${{env.properties.vesion}}"
